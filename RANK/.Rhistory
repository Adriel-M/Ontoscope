load("C:/Users/admin/Desktop/kartik/Ontoscope/fantom_import/RData_Samples/fantomCounts_filtered.RData")
colData <- fantomCounts[1:500,1:5]
row.names(colData) <- colData[,1]
View(colData)
rm(colData[,1])
colData$short_description<-NULL
#Contrast.R
#
# Purpose:   To claculate Gsx score for each sample(s) in each gene(x)
# Version:   V0.1
# Date:      2016-02-29
# Author:    kartikay chadha
#
# Input:     Normalized file containg raw read countd from fantom 5 via gather module
# Output:    Gsx scores (= Lsx X (-log10(Psx)))
# Depends:   input column_1 is target sample rest background
#
# ToDo:
# Notes:     Tested on window OS7x64bits and R version 3.1.3
#
# V 0.1:     Calculating Gsx score
#-----------LOAD FILE---------------------------------------
#Reference code
#colData <- read.csv("coldata.csv", row.names=1, header=T)
#-----------contrast function-----------------
contrast_v1 <- function(countData){
if("DESeq2" %in% rownames(installed.packages()) == FALSE) #loading DESeq2 package
{
source("http://bioconductor.org/biocLite.R")
biocLite("DESeq2")
}
library("DESeq2")
#Creating the column discription file
#Column 1 is the sample target and rest all columns are background cell lines
colData<-data.frame(condition = numeric(0)) #creating empty data frame with condition column name
colData[1,1]<- 'test' # first column of input file is tes/sample target
colData[2:ncol(countData),1]<- 'back' #rest all are background
row.names(colData)<- colnames(countData) #setting all column names input file as row names of column discription file
colData$condition <- factor(colData$condition) #converting characters to factors for DESeq
#=====Running DESEQ======
#creating input file for DESEQ
dds<-DESeqDataSetFromMatrix(countData = countData,colData = colData,design = ~ condition)
dds<- DESeq(dds) #Running DESEQ2
res<-results(dds) #Capturing results
#Calculating and expoting the Gsx score
x<-data.frame( gene = row.names(res), gsx= (-log10(res$padj)*res$log2FoldChange))
return(x)
}
#end
contrast_v1(colData)
rm(colData)
colData_sample_contrast <- fantomCounts[1:500,1:6]
`row.names(colData_sample_contrast) <- colData_sample_contrast[,1]
;;
row.names(colData_sample_contrast) <- colData_sample_contrast[,1]
colData_sample_contrast[,1]<-NULL
ls
gsx_colData_sample_contrast<-contrast_v1(colData_sample_contrast)
View(gsx_colData_sample_contrast)
result_fanromCounts <- contrast_v1(fantomCounts)
row.names(fantomCounts)<-fantomCounts[,1]
fantomCounts[,1]<-NULL
result_fanromCounts <- contrast_v1(fantomCounts)
View(result_fanromCounts)
save.image("C:/Users/admin/Desktop/kartik/Ontoscope/contrast/sample_files/xyz.RData")
rm(colData_sample_contrast)
load("C:/Users/admin/Desktop/kartik/Ontoscope/contrast/sample_files/xyz.RData")
rm(contrast_v1())
View(contrast_v1)
system.time()
system.time()
Sys.time()
x<-Sys.time()
y<-Sys.time()
y-x
rm(fantomCounts)
rm(colData_sample_contrast)
rm(gsx_colData_sample_contrast)
rm(result_fanromCounts)
load("C:/Users/admin/Desktop/kartik/Ontoscope/fantom_import/RData_Samples/fantomCounts_filtered.RData")
load("C:/Users/admin/Desktop/kartik/Ontoscope/fantom_import/RData_Samples/fantomCounts_73.RData")
load("C:/Users/admin/Desktop/kartik/Ontoscope/fantom_import/RData_Samples/fantomCounts_11.RData")
load("C:/Users/admin/Desktop/kartik/Ontoscope/fantom_import/RData_Samples/fantomCounts_114.RData")
load("C:/Users/admin/Desktop/kartik/Ontoscope/fantom_import/RData_Samples/fantomCounts_filtered.RData")
fantomCounts_10Kg_6s <- fantomCounts[1:10010,1:7]
row.names(fantomCounts_10Kg_6s) <- fantomCounts_10Kg_6s[,1]
fantomCounts_10Kg_6s[,1]<-NULL
fantomCounts_10Kg_6s <- fantomCounts[1:500,1:5]
fantomCounts_10Kg_6s <- fantomCounts[1:10010,1:7]
row.names(fantomCounts_10Kg_6s) <- fantomCounts_10Kg_6s[,1]
fantomCounts_10Kg_6s[,1]<-NULL
fantomCounts_500g_5s <- fantomCounts[1:500,1:6]
row.names(fantomCounts_500g_5s) <- fantomCounts_500g_5s[,1]
row.names(fantomCounts_500g_5s) <- fantomCounts_500g_5s[,1]<-NULL
View(fantomCounts_500g_5s)
x<-Sys.time()
gsx_fantomCounts_10Kg_6s<- contrast_v2(fantomCounts_10Kg_6s)
y<-Sys.time()
x-y
x<-Sys.time()
gsx_fantomCounts_10Kg_6s<- contrast_v1(fantomCounts_10Kg_6s)
y<-Sys.time()
x-y
x<-Sys.time()
gsx_fantomCounts_500g_5s<- contrast_v1(fantomCounts_500g_5s)
y<-Sys.time()
x-y
rm(fantomCounts_500g_5s)
fantomCounts_500g_5s <- fantomCounts[1:500,1:6]
row.names(fantomCounts_500g_5s) <- fantomCounts_500g_5s[,1]
fantomCounts_500g_5s[,1]<-NULL
x<-Sys.time()
gsx_fantomCounts_500g_5s<- contrast_v1(fantomCounts_500g_5s)
y<-Sys.time()
x-y
rm(fantomCounts)
save.image("C:/Users/admin/Desktop/kartik/Ontoscope/contrast/sample1_contrast.RData")
load("C:/Users/admin/Desktop/kartik/Ontoscope/contrast/sample1_contrast.RData")
rm(x)
rm(y)
rm(contrast_v1())
#Contrast.R
#
# Purpose:   To claculate Gsx score for each sample(s) in each gene(x)
# Version:   V0.1
# Date:      2016-02-29
# Author:    kartikay chadha
#
# Input:     Normalized file containg raw read countd from fantom 5 via gather module
# Output:    Gsx scores (= Lsx X (-log10(Psx)))
# Depends:   input column_1 is target sample rest background
#
# ToDo:
# Notes:     Tested on window OS7x64bits and R version 3.1.3
#
# V 0.1:     Calculating Gsx score
#
# v 0.2:     Updated with bugs fixed- library load cmd fixed
# Date-rel:  24-March-2016
#-----------LOAD FILE---------------------------------------
#Reference code
#colData <- read.csv("coldata.csv", row.names=1, header=T)
#
#Load "sample1_contrast.RData"
#-----------contrast function-----------------
contrast_v2 <- function(countData){
if("DESeq2" %in% rownames(installed.packages()) == FALSE) #loading DESeq2 package
{
source("http://bioconductor.org/biocLite.R")
biocLite("DESeq2")
}
library("DESeq2")
#Creating the column discription file
#Column 1 is the sample target and rest all columns are background cell lines
colData<-data.frame(condition = numeric(0)) #creating empty data frame with condition column name
colData[1,1]<- 'test' # first column of input file is tes/sample target
colData[2:ncol(countData),1]<- 'back' #rest all are background
row.names(colData)<- colnames(countData) #setting all column names input file as row names of column discription file
colData$condition <- factor(colData$condition) #converting characters to factors for DESeq
#=====Running DESEQ======
#creating input file for DESEQ
dds<-DESeqDataSetFromMatrix(countData = countData,colData = colData,design = ~ condition)
dds<- DESeq(dds) #Running DESEQ2
res<-results(dds) #Capturing results
#Calculating and expoting the Gsx score
x<-data.frame( gene = row.names(res), gsx= (-log10(res$padj)*res$log2FoldChange))
return(x)
}
#end
save.image("C:/Users/admin/Desktop/kartik/Ontoscope/sample1_contrast.RData")
save.image("C:/Users/admin/Desktop/kartik/Ontoscope/contrast/sample1_contrast.RData")
getwd()
source('~/R/R Projects/BCB420/Ontoscope/RANK/OntoscopeRank.R')
View(contrastOutputDummySource)
View(contrastOutputDummySource)
View(assessOutputDummySource)
View(assessOutputDummySource)
View(cgrdfsource)
View(cgrdfsource)
View(sourceExpressionDummy)
View(sourceExpressionDummy)
View(rgdfsource)
View(rgdfsource)
View(rgdftarget)
View(rgdftarget)
View(cgdf1)
View(cgdf1)
source('~/R/R Projects/BCB420/Ontoscope/RANK/OntoscopeRank.R')
